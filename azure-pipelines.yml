trigger:
- master

jobs:
- job: Linux
  pool:
    vmImage: 'ubuntu-16.04'

  steps:
  - script: sudo apt-get install ninja-build

  - task: CMake@1
    inputs:
      cmakeArgs: '-G Ninja -DX64_FILES=ON $(Build.SourcesDirectory)'

  - script: cd build && ninja

- job: macOS
  pool:
    vmImage: 'macOS-10.14'

  steps:
  - script: brew install ninja

  - task: CMake@1
    inputs:
      cmakeArgs: '-G Ninja -DX64_FILES=ON $(Build.SourcesDirectory)'

  - script: cd build && ninja

- job: Windows_x64
  pool:
    vmImage: 'windows-2019'

  steps:
  - task: CMake@1
    inputs:
      cmakeArgs: '-A x64 -DCMAKE_HOST_SYSTEM_NAME=Windows -DX64_FILES=ON $(Build.SourcesDirectory)'

  - task: MSBuild@1
    inputs:
      solution: '$(Build.SourcesDirectory)/build/*.sln'
      maximumCpuCount: true
      platform: 'x64'

- job: Windows_x86
  pool:
    vmImage: 'windows-2019'

  steps:
  - task: CMake@1
    inputs:
      cmakeArgs: '-A Win32 -DCMAKE_HOST_SYSTEM_NAME=Windows -DX64_FILES=OFF $(Build.SourcesDirectory)'

  - task: MSBuild@1
    inputs:
      solution: '$(Build.SourcesDirectory)/build/*.sln'
      maximumCpuCount: true
      platform: 'Win32'
